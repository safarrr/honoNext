import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { cookies } from "next/headers";
const inter = Inter({ subsets: ["latin"] });
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
import AuthProvider from "@/utility/AuthProvider";
import { decode, verify } from "hono/jwt";
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  let dataUser = null;
  const token = cookieStore.get("Token")?.value;
  if (token) {
    // const { header, payload } = decode(token);
    // console.log(token);
    try {
      const decodedPayload = await verify(token, process.env.TOKEN_JWT!);
      dataUser = {
        uid: decodedPayload.uid as string,
        nama: decodedPayload.nama as string,
        login: true,
        email: decodedPayload.email as string,
      };
    } catch (error) {}
  }
  console.log();
  const locale = await getLocale();
  const messages = await getMessages();
  return (
    <html lang={locale}>
      <body className={inter.className}>
        <NextIntlClientProvider messages={messages}>
          <AuthProvider data={dataUser}>{children}</AuthProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
